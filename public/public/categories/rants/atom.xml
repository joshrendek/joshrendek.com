<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rants | Josh Rendek]]></title>
  <link href="http://joshrendek.com/categories/rants/atom.xml" rel="self"/>
  <link href="http://joshrendek.com/"/>
  <updated>2016-12-15T16:05:34-05:00</updated>
  <id>http://joshrendek.com/</id>
  <author>
    <name><![CDATA[Josh Rendek]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Motivation to Work on New Projects]]></title>
    <link href="http://joshrendek.com/2014/04/motivation-to-work-on-new-projects/"/>
    <updated>2014-04-26T14:21:00-04:00</updated>
    <id>http://joshrendek.com/2014/04/motivation-to-work-on-new-projects</id>
    <content type="html"><![CDATA[<p>Whenever I have spare time ( often around Christmas or when I&rsquo;m on vacation/traveling ), I tend to fill it with working on projects I&rsquo;ve built up in my backlog. I&rsquo;m also really trying to keep a continuous streak of OSS commits going on Github (something about filling that chart up makes me want to work harder). Here&rsquo;s my process and how I go about working on personal projects and try to stay motivated - if you have any ideas I&rsquo;d love to hear them in the comments!</p>

<h2>Have a backlog</h2>

<p>I use Evernote for all my ideas and project notes:</p>

<p><img src="/images/motivation/evernote.png" alt="Evernote" /></p>

<p>I have two columns - one for things in progress or to do and one for projects that are done ( with a link to any github repos I published ). When I have some downtime but don&rsquo;t feel like actually writing any code - I&rsquo;ll write out plans for what the project needs (use cases, backend needs, software I plan on using, etc) and do research and store all that as a sub-note in Evernote (you can see that with the light green link to the HAProxy Frontend ) under the main page. Plus I can easily share these with friends for feedback by just copying the share URL.</p>

<h2>Use small milestones to build up bigger ones</h2>

<p>For instance, when I was working on the code for <a href="https://github.com/joshrendek/scala-ifcfg-api">http://ifcfg.net/</a> I decided there were two major components I would need to create: the web api to access the data, and then a backing library to do some web scraping to gather BGP data.
I started out writing a small scraper in Scala for scraping BGP and looking glass info (which involved learning some more SBT, and selenium apis for Scala) and then moved onto learning a small amount of the Play! framework and exposing my library via that api. This let me focus on one small component at a time and finish it ( I have a habit of leaving personal projects unfinished or taking a long time to finish them if I let the scope creep beyond what I deemed as minimum requirements ).</p>

<h2>Pick an interesting project</h2>

<p>There are some areas I just don&rsquo;t have an interest in - like writing an application to track golf scores.</p>

<p>So pick something you like - I love doing backend systems and APIs - pick something your passionate about already or a topic you want to learn more about.</p>

<h2>Learn</h2>

<p>If I&rsquo;m working on a personal project and not learning anything new (even if its just a new way to test, for instance) - I get bored, <em>really</em> quickly. I&rsquo;ve been stemming this by trying to pick up new languages as I work on projects and working on projects with broader goals.</p>

<p>For instance, my latest project I&rsquo;m working on is <a href="https://github.com/joshrendek/patchasaurus">Patchasaurus</a> ( yes there isn&rsquo;t a readme yet ). I know theres a gap in the systems world for (open source) patch management, especially focused on Ubuntu and Debian - so I decided to write a small initial version of one.
I had been playing around with Go at work (and boy is it nice to get a HTTP API running in a few MB of RAM) and decided to write the <em>agent</em> for patchasaurus in that ( nicknamed <em>trex</em> ).
I&rsquo;ve been learning how to cross compile programs in Go, what libraries don&rsquo;t work with cross-compilation (looking at you <code>os/user</code>) and a nice work flow for testing these while developing them ( sshfs is great for this with VirtualBox or Vagrant ).
I also chose to use Rails 4.1 as the management interface since I wanted to stay up to date with the new Rails features - turns out <code>spring</code> is very nice and a great improvement over the guard work flow I&rsquo;ve used before.</p>

<h2>Don&rsquo;t focus on processes versus getting things done</h2>

<p>I&rsquo;m a big fan of testing, and TDD, however I&rsquo;m not always in the mood to do it. Sometimes I just want to see results and I&rsquo;ll go back and refactor and test later. Picking what works for you on a specific project/component, and getting it done I think is much more important than rigidly following a specific set of guidelines on every project you do ( aka: test first, setup CI before any code, etc ).</p>

<h2>Don&rsquo;t get in a rut</h2>

<p>Staring at HackerNews or Reddit all day can be daunting - try and not focus on what everyone else is doing and instead focus on what you&rsquo;re getting done and how you&rsquo;re improving yourself.</p>

<p>Also don&rsquo;t let this influence your technology choices. Sometimes there are articles trending for <code>AngularJS</code> or <code>Ruby on Rails</code> - stick with what you picked ( unless you really want to learn that new tech ) - or figure out ways to incorporate that into smaller components of your project. Don&rsquo;t throw away all that progress just because you saw a few posts reach the page!</p>

<h2>Take breaks</h2>

<p>Don&rsquo;t spend all day coding - take breaks, go for a walk, a run, play with your dog, play a video game - something that can give you a moment to breathe and think about something else or give you time to re-focus on the grand vision you&rsquo;ve been laboring over. Figure out what works for you to relax and do it to break up that screen glow tan you&rsquo;re getting.</p>

<h2>Talk about what you&rsquo;re working on</h2>

<p>Talk with friends to brainstorm ideas, pair up on some problems, see if theres a more idiomatic way to do a function in the language your using ( for example, I spent some time trying to see if there were any <code>map()</code> equivalents on #go-nuts), and blog about what you&rsquo;re doing if that&rsquo;s your style.</p>

<p>Knowing people are using code and software I&rsquo;ve written is a huge motivating factor to working on future projects ( star/watch counts on Github, downloads on RubyGems, traffic to my blog, etc).</p>

<h2>Finish!!</h2>

<p>Yes it can be hard, but figure out what <em>finished</em> means to you, and do it. Publish it on Github, submit it to HackerNews, post it to reddit, get it hooked into TravisCI - make sure you come to the finish line of each component or project you&rsquo;re working on. Building up these small accomplishments can help set a streak for the future so you have the motivation to power through and get items done.</p>

<p>Sometimes you&rsquo;re more interested in getting an application finished than on the deployment process - throw it on Heroku, a shared hosting provider, etc.  There&rsquo;s nothing wrong with some shared hosting for a small project. Don&rsquo;t let things like deployment stop you from finishing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moved Domains to My Name]]></title>
    <link href="http://joshrendek.com/2012/08/moved-domains-to-my-name/"/>
    <updated>2012-08-19T21:26:00-04:00</updated>
    <id>http://joshrendek.com/2012/08/moved-domains-to-my-name</id>
    <content type="html"><![CDATA[<p>Moved everything over to my other domain, joshrendek.com incase you&rsquo;re wondering why you got redirected.</p>
]]></content>
  </entry>
  
</feed>
